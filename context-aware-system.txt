

This is a context aware ai chat system, could understand and get  context when I use  recently  

 the subject for example :  it's an agent or a file or a web or uri 
, this kind of passing a handle for the system suits the pattern of a casual idea as well.  

The system has the input of the user  query  , understanding of them using the system NLU component 
Along with the chat history and the time frame of , what the user has said in the private session helps us understand what is being said. What we mention is based on previous context.  

like the cursor AI IDE, it has also know user's recent operation 

the system design in text  
System Description
This is a multi-agent AI system with context-aware processing that follows this flow:
Core Architecture:

Intent Processing: User input is processed to understand intent and context
Context Selection: The system selects appropriate templates based on context, with role-domain use case categorization
Lead Agent: Acts as the coordinator, determining if the request is simple or complex
Multi-Agent Processing: For complex requests, it dispatches to specialized agents in a swarm
Planning & Execution: Includes planning, dispatching, and review cycles with feedback loops

Context Awareness Layers:

Structured Context: GLM (likely a language model) with context data and AI control systems
Current Context: Session-specific context
App Context: Application-level context
User Profile: Private data, database, files, GLM, with profile/experience/rules/SOP/memory

Input Processing Framework:
The system breaks down user input into:

What: Entity/domain identification
Why: Background/direction/objective
Who: Role/position specification
When: Time/schedule/duration/period
How: Tools/methodology selection

Tool Integration: The system connects to various tools for descriptions, use cases, status, and task execution.


could you  how to improve the current  system  design, problem inlucding :
- how to inject the proper context to system 
    - what i mean proper is i dont want inject everywhere in to codebase, since too many modifcation and might be too long for prompt
    - should inject only needed
- what should the context include , we suppose, include 
    - current context , session context, app context
    - Session context
        - Private data/database/file/4w  how they affect context
        - Profile /exp /role/sop/memory  how they affect  context

  
